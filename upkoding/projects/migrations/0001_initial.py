# Generated by Django 3.1.6 on 2021-03-09 10:58

from django.conf import settings
import django.contrib.postgres.indexes
import django.contrib.postgres.search
from django.db import migrations, models
import django.db.models.deletion
import projects.models
import sorl.thumbnail.fields
from django.contrib.postgres.operations import TrigramExtension


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        TrigramExtension(),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, max_length=150)),
                ('title', models.CharField(max_length=100, verbose_name='Judul')),
                ('description_short', models.CharField(default='', max_length=100, verbose_name='Deskripsi Pendek')),
                ('description', models.TextField(verbose_name='Deskripsi')),
                ('requirements', models.JSONField(blank=True, null=True, verbose_name='Requirements')),
                ('cover', sorl.thumbnail.fields.ImageField(blank=True, null=True, upload_to=projects.models.project_cover_path)),
                ('point', models.IntegerField(default=0)),
                ('tags', models.CharField(blank=True, default='', max_length=50, verbose_name='Tags')),
                ('is_featured', models.BooleanField(default=False)),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'Draft'), (1, 'Pending'), (2, 'Active'), (3, 'Deleted')], default=0, verbose_name='Status')),
                ('require_demo_url', models.BooleanField(default=False)),
                ('require_sourcecode_url', models.BooleanField(default=False)),
                ('taken_count', models.IntegerField(default=0)),
                ('completed_count', models.IntegerField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(blank=True, null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='projects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='UserProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requirements', models.JSONField(blank=True, null=True, verbose_name='Requirements')),
                ('requirements_completed_percent', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('requirements_completed_percent_max', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('point', models.IntegerField(default=0)),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'In Progress'), (1, 'Pending Review'), (2, 'Complete'), (3, 'Incomplete')], default=0, verbose_name='Status')),
                ('demo_url', models.CharField(blank=True, default='', max_length=250, verbose_name='URL demo proyek')),
                ('sourcecode_url', models.CharField(blank=True, default='', max_length=250, verbose_name='URL kode sumber proyek')),
                ('note', models.TextField(blank=True, default='', verbose_name='Catatan')),
                ('require_demo_url', models.BooleanField(default=False)),
                ('require_sourcecode_url', models.BooleanField(default=False)),
                ('likes_count', models.IntegerField(default=0)),
                ('comments_count', models.IntegerField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_projects', to='projects.project')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_projects', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProjectParticipant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscribed', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('user_project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.userproject')),
            ],
        ),
        migrations.CreateModel(
            name='UserProjectEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.PositiveSmallIntegerField(choices=[(0, 'Project start'), (1, 'Progress update'), (2, 'Progress complete'), (3, 'Review request'), (10, 'Review message'), (11, 'Project complete'), (12, 'Project incomplete')])),
                ('message', models.TextField(blank=True, default='')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('user_project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='projects.userproject')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=250)),
                ('order', models.SmallIntegerField(default=0)),
                ('image', sorl.thumbnail.fields.ImageField(upload_to=projects.models.project_image_path)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='projects.project')),
            ],
        ),
        migrations.AddIndex(
            model_name='userprojectevent',
            index=models.Index(fields=['event_type'], name='user_project_event_type_idx'),
        ),
        migrations.AddIndex(
            model_name='userproject',
            index=models.Index(fields=['user', 'project'], name='user_project_idx'),
        ),
        migrations.AddIndex(
            model_name='userproject',
            index=models.Index(fields=['status'], name='user_project_status_idx'),
        ),
        migrations.AddConstraint(
            model_name='userproject',
            constraint=models.UniqueConstraint(fields=('user', 'project'), name='unique_user_project'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['slug'], name='project_slug_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['status'], name='project_status_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='project_search_vector_idx'),
        ),
    ]
